name: CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  golangci:
    name: runner / golangci-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: "1.19.4"
          cache: false
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.52.2

  yamllint:
    name: runner / yamllint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: yaml-lint
        uses: karancode/yamllint-github-action@master
        with:
          yamllint_strict: true

  hadolint:
    name: runner / hadolint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: hadolint/hadolint-action@v3.1.0
        with:
          recursive: true
          dockerfile: Dockerfile

  dotenv-linter:
    name: runner / dotenv-linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dotenv-linter/action-dotenv-linter@v2
        with:
          reporter: github-check
          fail_on_error: true

  tests:
    name: runner / tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ${{ secrets.PG_USER }}
          POSTGRES_PASSWORD: ${{ secrets.PG_PASSWORD }}
          POSTGRES_DB: ${{ secrets.PG_DB }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v2
        with:
          go-version: "1.19.4"
      - name: Use example env file
        run: "mv .env.example .env"
      - name: Unit Tests
        run: "make test"
      - name: Upload coverage report
        run: bash <(curl -s https://codecov.io/bash)
